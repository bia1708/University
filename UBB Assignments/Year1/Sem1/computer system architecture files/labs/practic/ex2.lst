     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, fopen, scanf, fprintf, fclose               
     6                                  import exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 6E756D62657273342E-         file_name db "numbers4.txt", 0
    13 00000009 74787400           
    14 0000000D 6100                        access_mode db "a", 0
    15 0000000F FFFFFFFF                    file_descriptor dd -1
    16                                      
    17 00000013 00000000                    number dd 0
    18 00000017 256400                      input_format db "%d", 0
    19 0000001A 00000000                    sum dd 0
    20 0000001E 2564202D2025642000          output_format db "%d - %d ", 0
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 68[0D000000]                    push dword access_mode     
    25 00000005 68[00000000]                    push dword file_name
    26 0000000A FF15[00000000]                  call [fopen]
    27 00000010 83C408                          add esp, 4*2
    28                                          
    29 00000013 A3[0F000000]                    mov [file_descriptor], eax
    30                                          
    31 00000018 83F800                          cmp eax, 0
    32 0000001B 7459                            je ending
    33                                          
    34                                          reading_loop:
    35 0000001D 68[13000000]                        push dword number
    36 00000022 68[17000000]                        push dword input_format
    37 00000027 FF15[00000000]                      call [scanf]
    38 0000002D 83C408                              add esp, 4 * 2
    39                                              
    40 00000030 A1[13000000]                        mov eax, [number]
    41 00000035 83F800                              cmp eax, 0
    42 00000038 743C                                je ending
    43                                              
    44 0000003A C705[1A000000]0000-                 mov [sum], dword 0
    44 00000042 0000               
    45                                              while_not_zero:
    46 00000044 D1E8                                    shr eax, 1
    47 00000046 8315[1A000000]00                        adc [sum], dword 0
    48 0000004D 83F800                                  cmp eax, 0
    49 00000050 7402                                    je print
    50 00000052 EBF0                                    jmp while_not_zero
    51                                                  
    52                                              print:
    53 00000054 FF35[1A000000]                      push dword [sum]
    54 0000005A FF35[13000000]                      push dword [number]
    55 00000060 68[1E000000]                        push dword output_format
    56 00000065 FF35[0F000000]                      push dword [file_descriptor]
    57 0000006B FF15[00000000]                      call [fprintf]
    58 00000071 83C410                              add esp, 4 * 4
    59                                              
    60 00000074 EBA7                                jmp reading_loop
    61                                          
    62                                          ending:
    63 00000076 FF35[0F000000]                  push dword [file_descriptor]
    64 0000007C FF15[00000000]                  call [fclose]
    65 00000082 83C404                          add esp, 4
    66                                  
    67 00000085 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    68 00000087 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
