     1                                  ;Se citesc dintr-un fisier caractere, pana la intalnirea caracterului #. Sa se afiseze la consola numarul literelor mici, urmat de numarul literelor mari citite.
     2                                  bits 32 
     3                                  
     4                                  
     5                                  global start        
     6                                  
     7                                  
     8                                  extern exit, fopen, fclose, fread, printf               
     9                                  import exit msvcrt.dll    
    10                                  import fopen msvcrt.dll 
    11                                  import fclose msvcrt.dll 
    12                                  import fread msvcrt.dll 
    13                                  import printf msvcrt.dll  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 00000000                capital_letters dd 0
    17 00000004 00000000                    small_letters dd 0 
    18 00000008 546865206E756D6265-         format db "The number of small letters is %d, and the number of capital letters is %d.", 0
    18 00000011 72206F6620736D616C-
    18 0000001A 6C206C657474657273-
    18 00000023 2069732025642C2061-
    18 0000002C 6E6420746865206E75-
    18 00000035 6D626572206F662063-
    18 0000003E 61706974616C206C65-
    18 00000047 747465727320697320-
    18 00000050 25642E00           
    19 00000054 7200                        access_mode db "r", 0 ; we only read from the file so the access mode will be r
    20 00000056 696E7075742E747874-         file_name db "input.txt", 0
    20 0000005F 00                 
    21 00000060 FFFFFFFF                    file_descriptor dd -1
    22                                      character resb 0
    23                                      
    24                                      
    25                                  
    26                                  segment code use32 class=code
    27                                      start:
    28                                      ; first, we open the file
    29 00000000 68[54000000]                    push access_mode
    30 00000005 68[56000000]                    push file_name
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4 * 2
    33                                          
    34                                          ; we check to see if the file opened correctly
    35 00000013 A3[60000000]                    mov [file_descriptor], eax
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 0F8480000000                    je ending
    38                                          
    39                                          start_loop:
    40                                              ; first we read a character from the file
    41 00000021 FF35[60000000]                      push dword [file_descriptor]
    42 00000027 6A01                                push dword 1
    43 00000029 6A01                                push dword 1
    44 0000002B 68[64000000]                        push dword character
    45 00000030 FF15[00000000]                      call [fread]
    46 00000036 83C410                              add esp, 4 * 4
    47                                              
    48                                              ; then we check to see if the character we last read is #. If it is, we exit the loop
    49 00000039 803D[64000000]23                    cmp [character], byte "#"
    50 00000040 7436                                je end_loop
    51                                              
    52                                              ; then i checked to see if it's a small letter
    53 00000042 803D[64000000]61                    cmp [character], byte "a"
    54 00000049 7C11                                jl not_small
    55                                              
    56 0000004B 803D[64000000]7A                    cmp [character], byte "z"
    57 00000052 7F08                                jg not_small
    58                                              
    59 00000054 FF05[04000000]                      inc dword [small_letters]
    60 0000005A EBC5                                jmp start_loop
    61                                              
    62                                              ; if it's not a small letter, I check to see if it's a capital letter
    63                                              not_small:
    64 0000005C 803D[64000000]41                        cmp [character], byte "A"
    65 00000063 7C11                                    jl not_capital
    66                                                  
    67 00000065 803D[64000000]5A                        cmp [character], byte "Z"
    68 0000006C 7F08                                    jg not_capital
    69                                                  
    70 0000006E FF05[00000000]                          inc dword [capital_letters]
    71 00000074 EBAB                                    jmp start_loop
    72                                              
    73                                              not_capital:
    74 00000076 EBA9                                jmp start_loop
    75                                          
    76                                          end_loop:
    77                                          
    78                                          ; now we print the results in the console
    79 00000078 FF35[00000000]                  push dword [capital_letters]
    80 0000007E FF35[04000000]                  push dword [small_letters]
    81 00000084 68[08000000]                    push format
    82 00000089 FF15[00000000]                  call [printf]
    83 0000008F 83C40C                          add esp, 4 * 3
    84                                      
    85                                          ; we close the file
    86 00000092 FF35[60000000]                  push dword [file_descriptor]
    87 00000098 FF15[00000000]                  call [fclose]
    88 0000009E 83C404                          add esp, 4
    89                                          
    90                                          ending:
    91 000000A1 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    92 000000A3 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
