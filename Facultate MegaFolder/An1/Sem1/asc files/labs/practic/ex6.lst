     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll 
    10                                  import fclose msvcrt.dll 
    11                                  import fread msvcrt.dll 
    12                                  import printf msvcrt.dll 
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 7200                        access_mode db "r", 0
    17 00000002 7369722E74787400            file_name db "sir.txt", 0
    18 0000000A FFFFFFFF                    file_descriptor dd -1
    19                                      len equ 100
    20                                      sir resb 0
    21                                      poz equ 8
    22                                      
    23                                      
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[00000000]                    push access_mode
    29 00000005 68[02000000]                    push file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4 * 2
    32                                          
    33 00000013 A3[0A000000]                    mov [file_descriptor], eax
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 743C                            je ending
    36                                          
    37 0000001D FF35[0A000000]                  push dword [file_descriptor]
    38 00000023 6A64                            push len
    39 00000025 6A01                            push 1
    40 00000027 68[0E000000]                    push sir
    41 0000002C FF15[00000000]                  call [fread]
    42 00000032 83C410                          add esp, 4 * 4
    43                                          
    44 00000035 C605[16000000]37                mov [sir + poz], byte "7"
    45                                          
    46 0000003C 68[0E000000]                    push sir
    47 00000041 FF15[00000000]                  call [printf]
    48 00000047 83C404                          add esp, 4
    49                                          
    50 0000004A FF35[0A000000]                  push dword [file_descriptor]
    51 00000050 FF15[00000000]                  call [fclose]
    52 00000056 83C404                          add esp, 4
    53                                          ending:
    54                                          ; exit(0)
    55 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    56 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
